apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '6.2.1'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '6.2.1'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '6.2.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    // https://mvnrepository.com/artifact/com.sangupta/jopensurf
    compile group: 'com.sangupta', name: 'jopensurf', version: '1.0.0'
    // https://mvnrepository.com/artifact/org.bytedeco.javacpp-presets/opencv
    // compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '2.4.11-0.11'
    compile 'org.mongodb:mongodb-driver:3.4.2'
    compile fileTree(dir: 'lib', include: '*.jar')
    // runtime fileTree(dir: 'lib', include: '*.jar')
}

task runIndexing(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'net.semanticmetadata.lire.sampleapp.Indexer'

    // Define the directory where to find the images to index.
    args '../dataset/t-shirts/CROPPED/'
}

task runSearch(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'net.semanticmetadata.lire.sampleapp.Searcher'

    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    } else {
        args 'yTHMxGYLA5N4W5sTt'
    }
}
